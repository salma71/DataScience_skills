wf
library(ggplot2)
p <- ggplot(subset(wf, freq>50), aes(x = reorder(word, -freq), y = freq)) +
geom_bar(stat = "identity", fill = "#FF6666") +
theme(axis.text.x=element_text(angle=45, hjust=1))
p
library(ggplot2)
p <- ggplot(subset(wf, freq>100), aes(x = reorder(word, -freq), y = freq)) +
geom_bar(stat = "identity", fill = "#FF6666") +
theme(axis.text.x=element_text(angle=45, hjust=1))
p
library(ggplot2)
p <- ggplot(subset(wf, freq>300), aes(x = reorder(word, -freq), y = freq)) +
geom_bar(stat = "identity", fill = "#FF6666") +
theme(axis.text.x=element_text(angle=45, hjust=1))
p
library(ggplot2)
p <- ggplot(subset(wf, freq>=200), aes(x = reorder(word, -freq), y = freq)) +
geom_bar(stat = "identity", fill = "#FF6666") +
theme(axis.text.x=element_text(angle=45, hjust=1))
p
findAssocs(dtms, c("data" , "science"), corlimit=0.85) # specifying a correlation limit of 0.85
findAssocs(sparsewords, c("data" , "science"), corlimit=0.85) # specifying a correlation limit of 0.85
findAssocs(sparsewords, c("team" , "science"), corlimit=0.85) # specifying a correlation limit of 0.85
findAssocs(sparsewords, "think", corlimit=0.70)
library(wordcloud)
set.seed(142)
wordcloud(names(freq), freq, min.freq=25, scale = c(4, 0.2))
sparsewords <- removeSparseTerms(dtm,0.9)
freq <- colSums(as.matrix(sparsewords))
freq
sparsewords <- removeSparseTerms(dtm,0.98)
freq <- colSums(as.matrix(sparsewords))
freq
sparsewords <- removeSparseTerms(dtm,0.9)
freq <- colSums(as.matrix(sparsewords))
freq
docs <- tm_map(docs, stemDocument)
docs <- tm_map(docs, PlainTextDocument)
docs
writeLines(as.character(docs[200]))
dtm <- DocumentTermMatrix(docs)
dtm
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, tolower)
docs <- tm_map(docs, PlainTextDocument)
writeLines(as.character(docs[200]))
## removing stop words
docs <- tm_map(docs_plain, removeWords, stopwords("english"))
extraStopwords <- c(setdiff(stopwords('english'), c("r", "big")),"used", "will", "time", "can", "sex", "role", "new","can", "job", "etc", "one", "looking", "well","use","best","also", "high", "real", "please", "key", "able", "must", "like", "full", "include", "good", "non", "need","plus","day","year", "com", "want", "age","using","sexual", "help","apply", "race", "orientation")
docs <- tm_map(docs, removeWords, extraStopwords)
docs <- tm_map(docs, PlainTextDocument)
writeLines(as.character(docs[200]))
#writeLines(as.character(docs_st[200])) # Check to see if it worked.
#cleaning first
library(tm)
clean_text <- sapply(merged_dataframes$description, function(x) iconv(enc2utf8(x), sub = "byte"))
docs <- VCorpus(VectorSource(clean_text))
#summary(docs)
##writeLines(as.character(docs[1])) worked fine
docs <- tm_map(docs, removePunctuation)
for (j in seq(docs)) {
docs[[j]] <- gsub("\\/", " ", docs[[j]])
docs[[j]] <- gsub("@", " ", docs[[j]])
docs[[j]] <- gsub("\\|", " ", docs[[j]])
docs[[j]] <- gsub("\u2028", " ", docs[[j]])  # This is an ascii character that did not translate, so it had to be removed.
docs[[j]] <- gsub("[^[:alnum:]]", " ", docs[[j]])
docs[[j]] <- gsub("[[:punct:]]", " ", docs[[j]])
docs[[j]] <- gsub("[[:alnum:]]", " ", docs[[j]])
}
#writeLines(as.character(docs[200]))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, tolower)
docs <- tm_map(docs, PlainTextDocument)
#writeLines(as.character(docs[200]))
## removing stop words
docs <- tm_map(docs_plain, removeWords, stopwords("english"))
extraStopwords <- c(setdiff(stopwords('english'), c("r", "big")),"used", "will", "time", "can", "sex", "role", "new","can", "job", "etc", "one", "looking", "well","use","best","also", "high", "real", "please", "key", "able", "must", "like", "full", "include", "good", "non", "need","plus","day","year", "com", "want", "age","using","sexual", "help","apply", "race", "orientation")
docs <- tm_map(docs, removeWords, extraStopwords)
docs <- tm_map(docs, PlainTextDocument)
writeLines(as.character(docs[200]))
#writeLines(as.character(docs_st[200])) # Check to see if it worked.
## removing stop words
docs <- tm_map(docs_plain, removeWords, stopwords("english"))
extraStopwords <- c(setdiff(stopwords('english'), c("r", "big")),"used", "will", "time", "can", "sex", "role", "new","can", "job", "etc", "one", "looking", "well","use","best","also", "high", "real", "please", "key", "able", "must", "like", "full", "include", "good", "non", "need","plus","day","year", "com", "want", "age","using","sexual", "help","apply", "race", "orientation")
docs <- tm_map(docs, removeWords, extraStopwords)
docs <- tm_map(docs, PlainTextDocument)
#writeLines(as.character(docs[200]))
#writeLines(as.character(docs_st[200])) # Check to see if it worked.
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, PlainTextDocument)
#writeLines(as.character(docs[200]))
dtm <- DocumentTermMatrix(docs)
dtm
docs <- tm_map(docs, stemDocument)
docs <- tm_map(docs, PlainTextDocument)
dtm <- DocumentTermMatrix(docs)
dtm
freq <- colSums(as.matrix(dtm))
head(table(freq), 100)
sparsewords <- removeSparseTerms(dtm,0.9)
freq <- colSums(as.matrix(sparsewords))
freq
sparsewords <- removeSparseTerms(dtm,0.98)
freq <- colSums(as.matrix(sparsewords))
freq
sparsewords <- removeSparseTerms(dtm,0.9)
freq <- colSums(as.matrix(sparsewords))
freq
dtm <- DocumentTermMatrix(docs)
dtm
#cleaning first
library(tm)
clean_text <- sapply(merged_dataframes$description, function(x) iconv(enc2utf8(x), sub = "byte"))
docs <- VCorpus(VectorSource(clean_text))
#summary(docs)
##writeLines(as.character(docs[1])) worked fine
docs <- tm_map(docs, removePunctuation)
for (j in seq(docs)) {
docs[[j]] <- gsub("\\/", " ", docs[[j]])
docs[[j]] <- gsub("@", " ", docs[[j]])
docs[[j]] <- gsub("\\|", " ", docs[[j]])
docs[[j]] <- gsub("\u2028", " ", docs[[j]])  # This is an ascii character that did not translate, so it had to be removed.
docs[[j]] <- gsub("[^[:alnum:]]", " ", docs[[j]])
docs[[j]] <- gsub("[[:punct:]]", " ", docs[[j]])
docs[[j]] <- gsub("[[:alnum:]]", " ", docs[[j]])
}
#writeLines(as.character(docs[200]))
docs <- tm_map(docs, removeNumbers)
docs <- tm_map(docs, tolower)
docs <- tm_map(docs, PlainTextDocument)
#writeLines(as.character(docs[200]))
## removing stop words
docs <- tm_map(docs_plain, removeWords, stopwords("english"))
extraStopwords <- c(setdiff(stopwords('english'), c("r", "big")),"used", "will", "time", "can", "sex", "role", "new","can", "job", "etc", "one", "looking", "well","use","best","also", "high", "real", "please", "key", "able", "must", "like", "full", "include", "good", "non", "need","plus","day","year", "com", "want", "age","using","sexual", "help","apply", "race", "orientation")
docs <- tm_map(docs, removeWords, extraStopwords)
docs <- tm_map(docs, PlainTextDocument)
#writeLines(as.character(docs[200]))
#writeLines(as.character(docs_st[200])) # Check to see if it worked.
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, PlainTextDocument)
#writeLines(as.character(docs[200]))
dtm <- DocumentTermMatrix(docs)
dtm
freq <- colSums(as.matrix(dtm))
head(table(freq), 100)
sparsewords <- removeSparseTerms(dtm,0.9)
freq <- colSums(as.matrix(sparsewords))
freq
freq <- sort(colSums(as.matrix(sparsewords)), decreasing=TRUE)
head(freq, 100)
findFreqTerms(dtm, lowfreq=50)
wf <- data.frame(word=names(freq), freq=freq)
wf
softskills <- merged_dataframes %>%
mutate(workingremote = grepl("working remote", summary, ignore.case=TRUE)) %>%
mutate(communication = grepl("communicate", summary, ignore.case=TRUE)) %>%
mutate(collaborative = grepl("collaborate", summary, ignore.case=TRUE)) %>%
mutate(creative = grepl("creative", summary, ignore.case=TRUE)) %>%
mutate(critical = grepl("critical", summary, ignore.case=TRUE)) %>%
mutate(problemsolving = grepl("problem solving", summary, ignore.case=TRUE)) %>%
mutate(activelearning = grepl("active learning", summary, ignore.case=TRUE)) %>%
mutate(hypothesis = grepl("hypothesis", summary, ignore.case=TRUE)) %>%
mutate(organized = grepl("organize", summary, ignore.case=TRUE)) %>%
mutate(judgement = grepl("judgement", summary, ignore.case=TRUE)) %>%
mutate(selfstarter = grepl("self Starter", summary, ignore.case=TRUE)) %>%
mutate(interpersonalskills = grepl("interpersonal skills", summary, ignore.case=TRUE)) %>%
mutate(atttodetail = grepl("attention to detail", summary, ignore.case=TRUE)) %>%
mutate(visualization = grepl("visualization", summary, ignore.case=TRUE)) %>%
mutate(leadership = grepl("leadership", summary, ignore.case=TRUE)) %>%
select(
position, company, workingremote, communication, collaborative, creative, critical, problemsolving,
activelearning, hypothesis, organized, judgement, selfstarter, interpersonalskills, atttodetail,
visualization, leadership)
softskills <- merged_dataframes %>%
mutate(workingremote = grepl("working remote", summary, ignore.case=TRUE)) %>%
mutate(communication = grepl("communicate", summary, ignore.case=TRUE)) %>%
mutate(collaborative = grepl("collaborate", summary, ignore.case=TRUE))
softskills <- merged_dataframes %>%
mutate(workingremote = grepl("working remote", description, ignore.case=TRUE)) %>%
mutate(communication = grepl("communicate", description, ignore.case=TRUE)) %>%
mutate(collaborative = grepl("collaborate", description, ignore.case=TRUE))
softskills <- merged_dataframes %>%
mutate(workingremote = grepl("working remote", description, ignore.case=TRUE)) %>%
mutate(communication = grepl("communicate", description, ignore.case=TRUE)) %>%
mutate(collaborative = grepl("collaborate", description, ignore.case=TRUE)) %>%
mutate(creative = grepl("creative", description, ignore.case=TRUE)) %>%
mutate(critical = grepl("critical", description, ignore.case=TRUE)) %>%
mutate(problemsolving = grepl("problem solving", description, ignore.case=TRUE)) %>%
mutate(activelearning = grepl("active learning", description, ignore.case=TRUE)) %>%
mutate(hypothesis = grepl("hypothesis", description, ignore.case=TRUE)) %>%
mutate(organized = grepl("organize", description, ignore.case=TRUE)) %>%
mutate(judgement = grepl("judgement", description, ignore.case=TRUE)) %>%
mutate(selfstarter = grepl("self Starter", description, ignore.case=TRUE)) %>%
mutate(interpersonalskills = grepl("interpersonal skills", description, ignore.case=TRUE)) %>%
mutate(atttodetail = grepl("attention to detail", description, ignore.case=TRUE)) %>%
mutate(visualization = grepl("visualization", description, ignore.case=TRUE)) %>%
mutate(leadership = grepl("leadership", description, ignore.case=TRUE)) %>%
select(
position, company, workingremote, communication, collaborative, creative, critical, problemsolving,
activelearning, hypothesis, organized, judgement, selfstarter, interpersonalskills, atttodetail,
visualization, leadership)
softskills <- merged_dataframes %>%
mutate(workingremote = grepl("working remote", description, ignore.case=TRUE)) %>%
mutate(communication = grepl("communicate", description, ignore.case=TRUE)) %>%
mutate(collaborative = grepl("collaborate", description, ignore.case=TRUE)) %>%
mutate(creative = grepl("creative", description, ignore.case=TRUE)) %>%
mutate(critical = grepl("critical", description, ignore.case=TRUE)) %>%
mutate(problemsolving = grepl("problem solving", description, ignore.case=TRUE)) %>%
mutate(activelearning = grepl("active learning", description, ignore.case=TRUE)) %>%
mutate(hypothesis = grepl("hypothesis", description, ignore.case=TRUE)) %>%
mutate(organized = grepl("organize", description, ignore.case=TRUE)) %>%
mutate(judgement = grepl("judgement", description, ignore.case=TRUE)) %>%
mutate(selfstarter = grepl("self Starter", description, ignore.case=TRUE)) %>%
mutate(interpersonalskills = grepl("interpersonal skills", description, ignore.case=TRUE)) %>%
mutate(atttodetail = grepl("attention to detail", description, ignore.case=TRUE)) %>%
mutate(visualization = grepl("visualization", description, ignore.case=TRUE)) %>%
mutate(leadership = grepl("leadership", description, ignore.case=TRUE)) %>%
select(
job_title, company_name, workingremote, communication, collaborative, creative, critical, problemsolving,
activelearning, hypothesis, organized, judgement, selfstarter, interpersonalskills, atttodetail,
visualization, leadership)
softskills <- merged_dataframes %>%
mutate(workingremote = grepl("working remote", description, ignore.case=TRUE)) %>%
mutate(communication = grepl("communicate", description, ignore.case=TRUE)) %>%
mutate(collaborative = grepl("collaborate", description, ignore.case=TRUE)) %>%
mutate(creative = grepl("creative", description, ignore.case=TRUE)) %>%
mutate(critical = grepl("critical", description, ignore.case=TRUE)) %>%
mutate(problemsolving = grepl("problem solving", description, ignore.case=TRUE)) %>%
mutate(activelearning = grepl("active learning", description, ignore.case=TRUE)) %>%
mutate(hypothesis = grepl("hypothesis", description, ignore.case=TRUE)) %>%
mutate(organized = grepl("organize", description, ignore.case=TRUE)) %>%
mutate(judgement = grepl("judgement", description, ignore.case=TRUE)) %>%
mutate(selfstarter = grepl("self Starter", description, ignore.case=TRUE)) %>%
mutate(interpersonalskills = grepl("interpersonal skills", description, ignore.case=TRUE)) %>%
mutate(atttodetail = grepl("attention to detail", description, ignore.case=TRUE)) %>%
mutate(visualization = grepl("visualization", description, ignore.case=TRUE)) %>%
mutate(leadership = grepl("leadership", description, ignore.case=TRUE)) %>%
#select(
#  job_title, company_name, workingremote, communication, collaborative, creative, critical, problemsolving,
#  activelearning, hypothesis, organized, judgement, selfstarter, interpersonalskills, atttodetail,
#  visualization, leadership)
#summary(softskills) %>%
#  kable("html") %>%
#  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
#  scroll_box(width = "800px", height = "200px")
softskills <- merged_dataframes %>%
mutate(workingremote = grepl("working remote", description, ignore.case=TRUE)) %>%
mutate(communication = grepl("communicate", description, ignore.case=TRUE)) %>%
mutate(collaborative = grepl("collaborate", description, ignore.case=TRUE)) %>%
mutate(creative = grepl("creative", description, ignore.case=TRUE)) %>%
mutate(critical = grepl("critical", description, ignore.case=TRUE)) %>%
mutate(problemsolving = grepl("problem solving", description, ignore.case=TRUE)) %>%
mutate(activelearning = grepl("active learning", description, ignore.case=TRUE)) %>%
mutate(hypothesis = grepl("hypothesis", description, ignore.case=TRUE)) %>%
mutate(organized = grepl("organize", description, ignore.case=TRUE)) %>%
mutate(judgement = grepl("judgement", description, ignore.case=TRUE)) %>%
mutate(selfstarter = grepl("self Starter", description, ignore.case=TRUE)) %>%
mutate(interpersonalskills = grepl("interpersonal skills", description, ignore.case=TRUE)) %>%
mutate(atttodetail = grepl("attention to detail", description, ignore.case=TRUE)) %>%
mutate(visualization = grepl("visualization", description, ignore.case=TRUE)) %>%
mutate(leadership = grepl("leadership", description, ignore.case=TRUE))
#select(
#  job_title, company_name, workingremote, communication, collaborative, creative, critical, problemsolving,
#  activelearning, hypothesis, organized, judgement, selfstarter, interpersonalskills, atttodetail,
#  visualization, leadership)
#summary(softskills) %>%
#  kable("html") %>%
#  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
#  scroll_box(width = "800px", height = "200px")
softskills
colnames(softskills)
softskills <- merged_dataframes %>%
mutate(workingremote = grepl("working remote", description, ignore.case=TRUE)) %>%
mutate(communication = grepl("communicate", description, ignore.case=TRUE)) %>%
mutate(collaborative = grepl("collaborate", description, ignore.case=TRUE)) %>%
mutate(creative = grepl("creative", description, ignore.case=TRUE)) %>%
mutate(critical = grepl("critical", description, ignore.case=TRUE)) %>%
mutate(problemsolving = grepl("problem solving", description, ignore.case=TRUE)) %>%
mutate(activelearning = grepl("active learning", description, ignore.case=TRUE)) %>%
mutate(hypothesis = grepl("hypothesis", description, ignore.case=TRUE)) %>%
mutate(organized = grepl("organize", description, ignore.case=TRUE)) %>%
mutate(judgement = grepl("judgement", description, ignore.case=TRUE)) %>%
mutate(selfstarter = grepl("self Starter", description, ignore.case=TRUE)) %>%
mutate(interpersonalskills = grepl("interpersonal skills", description, ignore.case=TRUE)) %>%
mutate(atttodetail = grepl("attention to detail", description, ignore.case=TRUE)) %>%
mutate(visualization = grepl("visualization", description, ignore.case=TRUE)) %>%
mutate(leadership = grepl("leadership", description, ignore.case=TRUE)) %>%
select(position, location, description, workingremote, communication, collaborative, creative, critical, problemsolving,activelearning, hypothesis, organized, judgement, selfstarter, interpersonalskills, atttodetail, visualization, leadership)
summary(softskills) %>%
kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
scroll_box(width = "800px", height = "200px")
library(kableExtra)
softskills <- merged_dataframes %>%
mutate(workingremote = grepl("working remote", description, ignore.case=TRUE)) %>%
mutate(communication = grepl("communicate", description, ignore.case=TRUE)) %>%
mutate(collaborative = grepl("collaborate", description, ignore.case=TRUE)) %>%
mutate(creative = grepl("creative", description, ignore.case=TRUE)) %>%
mutate(critical = grepl("critical", description, ignore.case=TRUE)) %>%
mutate(problemsolving = grepl("problem solving", description, ignore.case=TRUE)) %>%
mutate(activelearning = grepl("active learning", description, ignore.case=TRUE)) %>%
mutate(hypothesis = grepl("hypothesis", description, ignore.case=TRUE)) %>%
mutate(organized = grepl("organize", description, ignore.case=TRUE)) %>%
mutate(judgement = grepl("judgement", description, ignore.case=TRUE)) %>%
mutate(selfstarter = grepl("self Starter", description, ignore.case=TRUE)) %>%
mutate(interpersonalskills = grepl("interpersonal skills", description, ignore.case=TRUE)) %>%
mutate(atttodetail = grepl("attention to detail", description, ignore.case=TRUE)) %>%
mutate(visualization = grepl("visualization", description, ignore.case=TRUE)) %>%
mutate(leadership = grepl("leadership", description, ignore.case=TRUE)) %>%
select(position, location, description, workingremote, communication, collaborative, creative, critical, problemsolving,activelearning, hypothesis, organized, judgement, selfstarter, interpersonalskills, atttodetail, visualization, leadership)
summary(softskills) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
scroll_box(width = "800px", height = "200px")
library(kableExtra)
softskills <- merged_dataframes %>%
mutate(workingremote = grepl("working remote", description, ignore.case=TRUE)) %>%
mutate(communication = grepl("communicate", description, ignore.case=TRUE)) %>%
mutate(collaborative = grepl("collaborate", description, ignore.case=TRUE)) %>%
mutate(creative = grepl("creative", description, ignore.case=TRUE)) %>%
mutate(critical = grepl("critical", description, ignore.case=TRUE)) %>%
mutate(problemsolving = grepl("problem solving", description, ignore.case=TRUE)) %>%
mutate(activelearning = grepl("active learning", description, ignore.case=TRUE)) %>%
mutate(hypothesis = grepl("hypothesis", description, ignore.case=TRUE)) %>%
mutate(organized = grepl("organize", description, ignore.case=TRUE)) %>%
mutate(judgement = grepl("judgement", description, ignore.case=TRUE)) %>%
mutate(selfstarter = grepl("self Starter", description, ignore.case=TRUE)) %>%
mutate(interpersonalskills = grepl("interpersonal skills", description, ignore.case=TRUE)) %>%
mutate(atttodetail = grepl("attention to detail", description, ignore.case=TRUE)) %>%
mutate(visualization = grepl("visualization", description, ignore.case=TRUE)) %>%
mutate(leadership = grepl("leadership", description, ignore.case=TRUE)) %>%
select(position, location, description, workingremote, communication, collaborative, creative, critical, problemsolving,activelearning, hypothesis, organized, judgement, selfstarter, interpersonalskills, atttodetail, visualization, leadership)
summary(softskills)
softskills2 <- softskills %>%
select(-(1:2)) %>%
summarise_all(sum) %>%
gather(variable,value) %>%
arrange(desc(value))
colnames(softskills)
softskills2 <- softskills %>%
select(-(1:2)) %>%
summarise_all(sum) %>%
gather(variable,value) %>%
arrange(desc(value))
softskills2 <- softskills %>%
select(-(1:2)) %>%
summarise_all(sum) %>%
gather(variable,value) %>%
arrange(desc(value))
softskills2 <- softskills %>%
select(-(1:2)) %>%
summarise_all(sum) %>%
gather(variable,value)
softskills2 <- softskills %>%
select(-(1:2)) %>%
summarise_all(sum)
softskills2 <- softskills %>%
select(-(1:2))
softskills2
softskills2 <- softskills %>%
select(3:18)
softskills2 <- softskills %>%
select(3:18) %>%
summarise_all(sum)
select(-(1:2))
select(softskills, -(1:2))
softskills2 <- softskills %>%
select(-(1:3)) %>%
summarise_all(sum) %>%
gather(variable,value) %>%
arrange(desc(value))
softskills2 <- softskills %>%
select(-(1:3)) %>%
summarise_all(sum) %>%
gather(skill,value)
softskills2 <- softskills %>%
select(-(1:3)) %>%
summarise_all(sum)
softskills2 <- softskills %>%
select(-(1:2)) %>%
summarise_all(sum) %>%
gather(variable, description)
softskills2 <- softskills %>%
select(-(1:2)) %>%
summarise_all(sum) %>%
gather(variable, value)
setwd("~/Desktop/MSDS_2019/Fall2019/aquisition_management_607/project_3/DataScience_skills")
install.packages("sentimentr")
knitr::opts_chunk$set(echo = TRUE)
# Removed brackets & general cleanup of job summaries
clean_allcsv <- clean_allcsv %>% mutate_each(funs(tolower), Position, Company, Location, Job_Description)
# Load packages
library(rvest)
library(stringr)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(xml2)
library(httr)
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library(tidytext)
library("magrittr")
require(ggthemes)
library('sentimentr')
#read from Leticia
ltcancel<-read.csv("https://raw.githubusercontent.com/ltcancel/Project3/master/SimplyHiredJobs.csv")
colnames(ltcancel)<-c("Position", "Company","Location","Salary","URL","Job_Description")
#read from Salma
selshahawy<-read.csv("https://raw.githubusercontent.com/salma71/MSDS_2019/master/Fall2019/aquisition_management_607/project_3/jobs_detailsInfo.csv", stringsAsFactors = FALSE)
colnames(selshahawy)<-c("Position", "Company","Location","URL","Job_Description")
#read from Sufian
ssufian<-read.csv("https://raw.githubusercontent.com/Luz917/data607project3_ssufian_monster_jobs/master/monsterjobs.csv", stringsAsFactors = FALSE)
colnames(ssufian)<-c("Position", "Company","Location","Salary","URL","Job_Description")
twocsv<-merge(ltcancel,selshahawy,all= TRUE)
allcsv<-merge(twocsv,ssufian, all=TRUE)
library("magrittr")
# REmove Salary column
clean_allcsv <- allcsv[,-c(4,6)]
# Removed brackets & general cleanup of job summaries
clean_allcsv <- clean_allcsv %>% mutate_each(funs(tolower), Position, Company, Location, Job_Description)
library("magrittr")
# REmove Salary column
clean_allcsv <- allcsv[,-c(4,6)]
clean_allcsv
clean_allcsv %>% mutate_each(funs(tolower), Position, Company, Location, Job_Description)
#read from Leticia
ltcancel<-read.csv("https://raw.githubusercontent.com/ltcancel/Project3/master/SimplyHiredJobs.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
colnames(ltcancel)<-c("Position", "Company","Location","Salary","URL","Job_Description")
#read from Salma
selshahawy<-read.csv("https://raw.githubusercontent.com/salma71/MSDS_2019/master/Fall2019/aquisition_management_607/project_3/jobs_detailsInfo.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
colnames(selshahawy)<-c("Position", "Company","Location","URL","Job_Description")
#read from Sufian
ssufian<-read.csv("https://raw.githubusercontent.com/Luz917/data607project3_ssufian_monster_jobs/master/monsterjobs.csv", stringsAsFactors = FALSE, encoding = "UTF-8")
colnames(ssufian)<-c("Position", "Company","Location","Salary","URL","Job_Description")
twocsv<-merge(ltcancel,selshahawy,all= TRUE)
allcsv<-merge(twocsv,ssufian, all=TRUE)
library("magrittr")
# REmove Salary column
clean_allcsv <- allcsv[,-c(4,6)]
clean_allcsv
# Removed brackets & general cleanup of job summaries
clean_allcsv <- clean_allcsv %>% mutate_each(funs(tolower), Position, Company, Location, Job_Description)
clean_allcsv %>% mutate_each(funs(tolower), Position, Company, Location, Job_Description)
# Removed brackets & general cleanup of job summaries
#clean_allcsv <- clean_allcsv %>% mutate_each(funs(tolower), Position, Company, Location, Job_Description)
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "[\r\n]" , "")
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "\\." , "")
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "\\*" , "")
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "\\+" , "")
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "\\\\" , "")
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "\\)" , "")
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "\\(" , "")
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "[[:punct:]]+", "")
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "[\n]" , "")
#head(clean_allcsv1 )
clean_allcsv2 <- clean_allcsv[,-c(4)] # this is for sentinment later
clean_allcsv2$Job_Description <- clean_allcsv1
clean_allcsv2$Job_Description[0] #checking only
clean_allcsv2
clean_allcsv2$Job_Description[0]
clean_allcsv2$Job_Description[1]
clean_allcsv1
# Removed brackets & general cleanup of job summaries
#clean_allcsv <- clean_allcsv %>% mutate_each(funs(tolower), Position, Company, Location, Job_Description)
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "[\r\n]" , "")
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "\\." , "")
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "\\*" , "")
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "\\+" , "")
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "\\\\" , "")
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "\\)" , "")
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "\\(" , "")
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "[[:punct:]]+", "")
clean_allcsv1 <- str_replace_all(clean_allcsv$Job_Description, "[\n]" , "")
#head(clean_allcsv1 )
clean_allcsv2 <- clean_allcsv[,-c(4)] # this is for sentinment later
clean_allcsv2$Job_Description <- clean_allcsv1
clean_allcsv1
colnames(clean_allcsv1)
tfidf <- clean_allcsv2$Job_Description
# Control list to be used for all corpuses
control_list <- list(removePunctuation = TRUE, stopwords = TRUE, tolower = TRUE,
weighting = weightTfIdf)
# TF-IDF Based on the 3 job postings
corpus.all <- VCorpus(VectorSource(tfidf))
tdm.all <- TermDocumentMatrix(corpus.all, control = control_list)
#inspect(tdm.all)
# Remove outliers consisting of very rare terms
tdm.60 <- removeSparseTerms(tdm.all, sparse = 0.60)
#inspect(tdm.60)
# Sum rows for total & make dataframe
df_all <- tidy(sort(rowSums(as.matrix(tdm.60))))
colnames(df_all) <- c("words", "count")
#View(df_all)
help("Deprecated")
# TF-IDF Based on the 3 job postings
corpus.all <- VCorpus(VectorSource(tfidf))
tdm.all <- TermDocumentMatrix(corpus.all, control = control_list)
#inspect(tdm.all)
# Remove outliers consisting of very rare terms
tdm.60 <- removeSparseTerms(tdm.all, sparse = 0.60)
#inspect(tdm.60)
# Sum rows for total & make dataframe
df_all <- sort(rowSums(as.matrix(tdm.60)))
colnames(df_all) <- c("words", "count")
devtools::install_github("dgrtwo/broom")
# Sum rows for total & make dataframe
df_all <- tidy(sort(rowSums(as.matrix(tdm.60))))
colnames(df_all) <- c("words", "count")
#View(df_all)
